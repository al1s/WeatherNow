{"version":3,"sources":["script.js"],"names":["createCookie","name","value","days","Date","setTime","date","getTime","toGMTString","document","expires","readCookie","RegExp","replace","exec","cookie","eraseCookie","capitalize","sentence","substr","errorHandler","error","console","message","err","stack","getWeatherColor","temp_c","colors","main","support","getWeatherImage","conditions","seasonYear","backgroundImage","flurries","link","fog","hazy","author","rain","sunny","spring","summer","fall","cloudy","winter","mostlysunny","credit","credits","partlysunny","image","displayData","bodyElm","querySelector","aboutBtnElm","timeElm","e","toggleButtonsState","tempCScaleLabelElm","tempFScaleLabelElm","type","tempElm","innerText","data","btn_pressed","inputUncheckedElm","tempCScaleInputElm","keyCode","addHandler","removeHandler","cScaleClickHandler","inputCheckedElm","tempFScaleInputElm","removeEventListener","btn_released","remove","setAttribute","addEventListener","fScaleClickHandler","getWeatherForPosition","pos","alert","add","fetch","then","classList","skyElm","copyrightElm","copyrightTextElm","userScale","copyrightSignElm","currDate","currTime","placeElm","place","dateElm","weatherColors","documentElement","style","temp_f","mainElm","hemisphere","backgroundColor","color","currMonth","aboutElm","borderColor","setProperty","aboutCloseBtnElm","innerHTML","bgImage","d","dayOptions","dateOptions","timeOptions","minute","currDay","toLocaleDateString","temp","obz","tempFeels","feelslike_string","tempFeelsF","feelslike_f","loc","country","state","state_name","icon","time","weekday","month","day","hour","undefined","toLocaleTimeString","getMonth","tempFeelsC","feelslike_c","split","getLocationByIP","resp","sky","geoLocFail","msg","log","ok","json","Error","latitude","longitude","warn","getLocation","navigator","location_timeout","geolocation","clearTimeout","setTimeout","code","aboutBtn","position","coords","aboutMsg","toggle","aboutCloseBtn","enableHighAccuracy"],"mappings":"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","file":"script.js","sourcesContent":["  function createCookie(name,value,days) {\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime()+(days*24*60*60*1000));\n      var expires = '; expires='+date.toGMTString();\n    } else var expires = '';\n    document.cookie = name+'='+value+expires+'; path=/';\n  }\n\n//here is the function from https://stackoverflow.com/a/5882352\n  function readCookie(name) {\n    return (name = new RegExp('(?:^|;\\\\s*)' + ('' + name).replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '=([^;]*)').exec(document.cookie)) && name[1];\n  }\n\n  function eraseCookie(name) {\n    createCookie(name, '', -1);\n  }\n\n\n  function capitalize(sentence) {\n    return sentence[0].toUpperCase() + sentence.substr(1);\n  }\n\n  function errorHandler(error) {\n    console.log(`Got error  - ${error.message},\\n${err.stack}`);\n  }\n\n  function getWeatherColor(temp_c) {\n    let colors = {};\n    if (30 <= temp_c) colors = { main: '#A50021', support: '#fff'};\n    else if (25 <= temp_c && temp_c < 30) colors = { main: '#D82632', support: '#fff'};\n    else if (20 <= temp_c && temp_c < 25) colors = { main: '#F76D5E', support: '#242442'}; //support: #fff - bad accessibility\n    else if (15 <= temp_c && temp_c < 20) colors = { main: '#FFAD72', support: '#00365c'};\n    else if (10 <= temp_c && temp_c < 15) colors = { main: '#FFE099', support: '#001F66'};\n    else if (5 <= temp_c && temp_c < 10) colors = { main: '#FFFFBF', support: '#000040'};\n    else if (0 <= temp_c && temp_c < 5) colors = { main: '#E0FFFF', support: '#1F0000'};\n    else if (-5 <= temp_c && temp_c < 0) colors = { main: '#AAF7FF', support: '#1F0000'};\n    else if (-10 <= temp_c && temp_c < -5) colors = { main: '#72D8FF', support: '#1F0000'};\n    else if (-15 <= temp_c && temp_c < -10) colors = { main: '#3FA0FF', support: '#1F0000'};\n    else if (-20 <= temp_c && temp_c < -15) colors = { main: '#264CFF', support: '#fcc'};\n    return colors;\n  }\n\n  function getWeatherImage(conditions, seasonYear) {\n    // weather determitants:\n    // - conditions as returned by weather API\n    // - current local season of the year;\n    // - latitude (north or south hemisphere);\n    let backgroundImage;\n    let credit = {};\n    let credits = {\n      flurries:    { author: 'Frida',\n                       link: 'https://flic.kr/p/k7zUGc' },\n      snow:        { author: 'FHKE',\n                       link: 'https://flic.kr/p/7AVLQR' },\n      storm:       { author: 'Kuster & Wildhaber Photography',\n                       link: 'https://flic.kr/p/cESNRS' },\n      fog:         { author: 'Martin Fisch',\n                       link: 'https://flic.kr/p/dkqP1t' },\n      hazy:        { author: 'pnwbot',\n                       link: 'https://flic.kr/p/pusoD1' },\n      rain:        { author: 'Gabriele Diwald',\n                       link: 'https://flic.kr/p/dfkuTL' },\n      sunny:       { winter: { author: 'bfatphoto',\n                                 link: 'https://flic.kr/p/RHwJiG' },\n                    spring:  { author: 'Stanley Zimny',\n                                 link: 'https://flic.kr/p/oavqBk' },\n                    summer:  { author: 'Chris',\n                                 link: 'https://flic.kr/p/fgLTUU' },\n                    fall:    { author: 'Jorge Franganillo',\n                                 link: 'https://flic.kr/p/i28UqP' }},\n      cloudy:      { summer: { author: 'Kay Gaensler',\n                                 link: 'https://flic.kr/p/cScQxy' },\n                     winter: { author: 'Peter Toporowski',\n                                 link: 'https://flic.kr/p/RDW4Z1' }},\n      partlysunny: { winter: { author: 'Gérald Laik',\n                                 link: 'https://flic.kr/p/RzuZS7' },\n                    spring:  { author: 'Graham Haley',\n                                 link: 'https://flic.kr/p/UtjTDm' },\n                    summer:  { author: 'Nicolas Raymond',\n                                 link: 'http://freestock.ca/skies_clouds_g61-coastal_clouds__hdr_p1879.html' }},\n     mostlysunny:  { winter: { author: 'Adam Tas',\n                                 link: 'https://flic.kr/p/R33zcf' },\n                    spring:  { author: 'Jim Choate',\n                                 link: 'https://flic.kr/p/SbmJj2' },\n                    summer:  { author: 'Nicolas Raymond',\n                                 link: 'http://freestock.ca/canada_g92-beaver_brook_scenery__hdr_p804.html' },\n                    fall:    { author: 'Belinda Church',\n                                 link: 'https://flic.kr/p/qb4cbs' }}\n    };\n    switch (conditions) {\n      case 'chanceflurries':\n      case 'chancesleet':\n      case 'flurries':\n      case 'sleet':\n        backgroundImage = `img/flurries.jpg`;\n        credit = credits.flurries;\n        break;\n      case 'chancesnow':\n      case 'snow':\n        backgroundImage = `img/snow.jpg`;\n        credit = credits.snow;\n        break;\n      case 'chancetstorms':\n      case 'tstorms':\n        backgroundImage = `img/storm.jpg`;\n        credit = credits.storm;\n        break;\n      case 'fog':\n        backgroundImage = `img/fog.jpg`;\n        credit = credits.fog;\n        break;\n      case 'hazy':\n        backgroundImage = `img/hazy.jpg`;\n        credit = credits.hazy;\n        break;\n      case 'chancerain':\n      case 'rain':\n        backgroundImage = `img/rain.jpg`;\n        credit = credits.rain;\n        break;\n      case 'clear':\n      case 'sunny':\n        backgroundImage = `img/sunny_${seasonYear}.jpg`;\n        credit = credits.sunny[seasonYear];\n        break;\n      case 'cloudy':\n        if (seasonYear === 'spring' || seasonYear === 'fall') seasonYear = 'summer';\n        backgroundImage = `img/cloudy_${seasonYear}.jpg`;\n        credit = credits.cloudy[seasonYear];\n        break;\n      case 'mostlycloudy':\n      case 'partlysunny':\n        if (seasonYear === 'fall') seasonYear = 'spring';\n        backgroundImage = `img/partlysunny_${seasonYear}.jpg`;\n        credit = credits.partlysunny[seasonYear];\n        break;\n      case 'mostlysunny':\n      case 'partlycloudy':\n        backgroundImage = `img/mostlysunny_${seasonYear}.jpg`;\n        credit = credits.mostlysunny[seasonYear];\n        break;\n    }\n    return { image: backgroundImage, credit };\n  }\n\n  function displayData(data) {\n\n    const bodyElm = document.querySelector('body');\n    const mainElm = document.querySelector('.main');\n    const aboutElm = document.querySelector('.about');\n    const aboutBtnElm = document.querySelector('.about__button');\n    const aboutCloseBtnElm = document.querySelector('.about__button--close-modal');\n    const dateElm = document.querySelector('.geo-details__date');\n    const timeElm = document.querySelector('.geo-details__time');\n    const placeElm = document.querySelector('.geo-details__place');\n    const skyElm = document.querySelector('.weather__sky');\n    const tempElm = document.querySelector('.weather__temp');\n    const tempFScaleLabelElm = document.querySelector('.label__item--fahrenheit');\n    const tempCScaleLabelElm = document.querySelector('.label__item--celsius');\n    const tempFScaleInputElm = document.querySelector('.radio__item--fahrenheit');\n    const tempCScaleInputElm = document.querySelector('.radio__item--celsius');\n    const copyrightElm = document.querySelector('.copyright');\n    const copyrightTextElm = document.querySelector('.copyright__text');\n    const copyrightSignElm = document.querySelector('.copyright__sign');\n    const userScale = readCookie('scale');\n\n\n    dateElm.innerText = data.currDate;\n    timeElm.innerText = data.currTime;\n    placeElm.innerText = data.place;\n    tempElm.innerText = userScale === 'celsius' ? data.temp_c : data.temp_f;\n\n    // set visual appearance of the page\n    let seasonYear;\n    if (data.currMonth < 3 || data.currMonth === 12) seasonYear = data.hemisphere === 'north' ? 'winter' : 'summer';\n    else if (3 <= data.currMonth && data.currMonth < 6) seasonYear = data.hemisphere === 'north' ? 'spring' : 'fall';\n    else if (6 <= data.currMonth && data.currMonth < 9) seasonYear = data.hemisphere === 'north' ? 'summer' : 'winter';\n    else if (9 <= data.currMonth && data.currMonth < 12) seasonYear = data.hemisphere === 'north' ? 'fall' : 'spring';\n    const bgImage = getWeatherImage(data.conditions, seasonYear);\n    const weatherColors = getWeatherColor(data.temp_c); // all inner visual appearance decisions are based on celsius scale;\n    document.documentElement.style.setProperty('--bg-color', weatherColors.main);\n    document.documentElement.style.setProperty('--text-color', weatherColors.support);\n    // unable to set svg properties through css variables, so work directly\n    copyrightSignElm.style.color = weatherColors.main;\n    copyrightSignElm.style.fill = weatherColors.support;\n    // unable to rule colors in old Safari with css variables, so work directly\n    mainElm.style.color = weatherColors.support;\n    mainElm.style.backgroundColor = weatherColors.main;\n    aboutElm.style.color = weatherColors.support;\n    aboutElm.style.backgroundColor = weatherColors.main;\n    aboutElm.style.borderColor = weatherColors.support;\n    aboutBtnElm.style.color = weatherColors.support;\n    aboutBtnElm.style.backgroundColor = weatherColors.main;\n    aboutBtnElm.style.borderColor = weatherColors.support;\n    aboutCloseBtnElm.style.color = weatherColors.main;\n    aboutCloseBtnElm.style.backgroundColor = weatherColors.support;\n    aboutCloseBtnElm.style.borderColor = weatherColors.main;\n    copyrightElm.style.backgroundColor = weatherColors.main;\n    copyrightTextElm.style.color = weatherColors.support; \n\n    bodyElm.style.backgroundImage = `url('${bgImage.image}')`;\n    copyrightTextElm.innerHTML = `<p>Image by <a href='${bgImage.credit.link}'>${bgImage.credit.author}</a></p>`;\n\n    // set scale and switch handlers\n    if (userScale === 'celsius') toggleButtonsState(tempCScaleLabelElm, tempFScaleLabelElm);\n    else toggleButtonsState(tempFScaleLabelElm, tempCScaleLabelElm);\n\n    function cScaleClickHandler(e) {\n      if ((e.type === 'keypress' && (e.keyCode === 13 || e.keyCode === 32)) ||\n           e.type === 'click') {\n        tempElm.innerText = data.temp_c;\n        if (readCookie('scale')) eraseCookie('scale');\n        createCookie('scale','celsius',300)\n        toggleButtonsState(tempCScaleLabelElm, tempFScaleLabelElm);\n      }\n    }\n\n    function fScaleClickHandler(e) {\n      if ((e.type === 'keypress' && (e.keyCode === 13 || e.keyCode === 32)) ||\n           e.type === 'click') {\n        tempElm.innerText = data.temp_f;\n        if (readCookie('scale')) eraseCookie('scale');\n        createCookie('scale','fahrenheit',300)\n        toggleButtonsState(tempFScaleLabelElm, tempCScaleLabelElm);\n      }\n    }\n\n    function toggleButtonsState(btn_pressed, btn_released) {\n      if (btn_pressed.innerText  === 'F') {\n        var addHandler = cScaleClickHandler;\n        var removeHandler = fScaleClickHandler;\n        var inputCheckedElm = tempFScaleInputElm;\n        var inputUncheckedElm = tempCScaleInputElm;\n      } else if (btn_pressed.innerText  === 'C') {\n        var addHandler = fScaleClickHandler;\n        var removeHandler = cScaleClickHandler;\n        var inputCheckedElm = tempCScaleInputElm;\n        var inputUncheckedElm = tempFScaleInputElm;\n      }\n\n      btn_pressed.classList.add('vivid');\n      inputCheckedElm.setAttribute('aria-checked', 'true');\n      btn_pressed.removeEventListener('click', removeHandler);\n      btn_pressed.removeEventListener('keypress', removeHandler);\n\n      btn_released.classList.remove('vivid');\n      inputUncheckedElm.setAttribute('aria-checked', 'false');\n      btn_released.addEventListener('click', addHandler);\n      btn_released.addEventListener('keypress', addHandler);\n    }\n\n\n  }\n\n  function getWeatherForPosition(pos) {\n    //const httpAddr = `https://api.wunderground.com/api/c29706cb930a70b9/conditions/q/${pos.coords.latitude},${pos.coords.longitude}.json`;//Kenmore,WA\n    const httpAddr = `https://api.wunderground.com/api/c29706cb930a70b9/conditions/q/${pos}.json`;\n    if (!fetch) alert('fetch() unavailable');\n\n    fetch(httpAddr)\n      .then(resp => {\n        if (resp.ok) {\n          return resp.json();\n        }\n        throw new Error();\n      })\n      .then(data => {\n\n        const obz = data.current_observation;\n        const loc = obz.display_location;\n\n        const place = loc.city + ', ' + (loc.country === 'US' ? loc.state : loc.state_name) +  (loc.country === 'US' ? (', ' + loc.country) : '');\n        const time = obz.local_epoch;\n        let d = new Date(0);\n        d.setUTCSeconds(time);\n        const dayOptions = { weekday: 'long' };\n        const dateOptions = { month: 'long',\n                              day: 'numeric' };\n        const timeOptions = { hour: 'numeric',\n                              minute: 'numeric' };\n        const currDay = d.toLocaleDateString(undefined, dayOptions);\n        const currDate = d.toLocaleDateString(undefined, dateOptions);\n        const currTime = d.toLocaleTimeString(undefined, timeOptions);\n        const currMonth = d.getMonth() + 1;\n        const sky = obz.weather;\n        const temp = obz.temperature_string;\n        const temp_c = obz.temp_c;\n        const temp_f = obz.temp_f;\n        const tempFeels = obz.feelslike_string;\n        const tempFeelsC = obz.feelslike_c;\n        const tempFeelsF = obz.feelslike_f;\n        const conditions = obz.icon;\n        return {\n          place,\n          hemisphere: pos.split(',')[0] > 0 ? 'north' : 'south',\n          currDay,\n          currDate,\n          currTime,\n          currMonth,\n          sky,\n          temp,\n          temp_f,\n          temp_c,\n          tempFeels,\n          tempFeelsF,\n          tempFeelsC,\n          conditions\n        }\n      })\n      .then(data => displayData(data))\n      .catch (error => console.log(`Error while retrieving weather data - ${error.msg}`));\n  }\n\n  function getLocationByIP() {\n    fetch('https://freegeoip.net/json/')\n      .then(resp => {\n        if (resp.ok) return resp.json();\n        throw new Error();\n      })\n      .then(data => {\n        getWeatherForPosition(data.latitude + ',' + data.longitude);\n      })\n  }\n\n  function geoLocFail(error) {\n    let msg = '';\n    switch(error) {\n      case 1: //error.PERMISSION_DENIED:\n           msg = \"User denied the request for Geolocation.\";\n           break;\n      case 2: //error.POSITION_UNAVAILABLE:\n           msg = \"Location information is unavailable.\";\n           break;\n      case 3: //error.TIMEOUT:\n          msg = \"The request to get user location timed out.\";\n          break;\n      default:\n          msg = error.message;\n          break;\n    }\n    console.warn(`Error: ${msg}`);\n    getLocationByIP(); //fallback to get alternative user location;\n  }\n\n  function getLocation() {\n    if(navigator.geolocation) {\n      const location_timeout = setTimeout(function() {\n        let err = new Error({code: 3});\n        geoLocFail(err);\n      }, 0.2 * 10 * 1000); //0.2 is for 2 seconds timeout\n      navigator.geolocation.getCurrentPosition(function(position) {\n        clearTimeout(location_timeout);\n        //console.log('successfully get geoposition');\n        getWeatherForPosition(position.coords.latitude + ',' + position.coords.longitude);\n      }, function(err) {\n        clearTimeout(location_timeout);\n        //console.log('failed to get geoposition');\n        geoLocFail(err);\n      }, { timeout: 0.2 * 10 * 1000, maximumAge: 60 * 10 * 1000, enableHighAccuracy: false });\n    } else {\n      let err = new Error({code: -999, message: 'An unknown Geolocation error occurred'});\n      geoLocFail(err);\n    }\n  }\n\n// main\n  getLocation();\n\n  const aboutBtn = document.querySelector('.about__button');\n  aboutBtn.addEventListener('click', function() {\n    const aboutMsg = document.querySelector('.about');\n    aboutMsg.classList.toggle('closed');\n  });\n\n  const aboutCloseBtn = document.querySelector('.about__button--close-modal');\n  aboutCloseBtn.addEventListener('click', function() {\n    const aboutMsg = document.querySelector('.about');\n    aboutMsg.classList.toggle('closed');\n  });\n"],"sourceRoot":"/source/"}